#+title Machine Learning in C
#+PROPERTY: header-args:c :tangle ./ml.c

* Machine Learning
The topic for today will be to write our very own Neural Network in C with only the standard library and nothing else.

** Importing the needed headers
First step is to use the headers we need, in our case:
- stdio.h for writing to the terminal and
- math.h for math stuff
#+begin_src c

  #include <stdio.h>
  #include <math.h>

#+end_src

** Defining some data
The next step is to get some data with which the model can learn later.
We are doing to be using the logic gate AND.
#+begin_src c
  
  float data[][] = {
    {0, 0, 0},
    {0, 1, 0},
    {1, 0, 0},
    {1, 1, 1},
  };
  int samples = sizeof(data)/sizeof(data[0]);

#+end_src

** Sigmoid
For our activation function we use sigmoid since it outputs values between 0 and 1 and we have binary data.
#+begin_src c
  float sigmoid(float x) {
    return 1.0/(1.0+expf(-x));
  }
#+end_src

** The forward function
The next imortant step is to define a function that takes the input to the network and gives us the output.
#+begin_src c
  float forward(float x1, float x2, float w1, float w2, float b) {
    return (x1*w1)+(x2*w2)+b;
  }
#+end_src

** Mean Squared Error
The error function decides how good or bad our model is.
#+begin_src c
  float mse(float w1, float w2, float b) {
    float c = 0.0f;
    float d;

    for (int i = 0; i < samples; i++)
    {
      d = forward(data[0], data[1], w1, w2, b) - data[2];
      c += d*d;
    }

    return c/samples;
  }
#+end_src

** The optimizer
The function that takes the parameters of the network and updates them is defined next.
#+begin_src c
  void fdiff(float *w1, float *w2, float *b)
  {
    float d;
    float c = mse(*w1, *w2, *b);

    float eps = 0.1;
    float rate = 0.1;

    d = (mse(*w1+eps, *w2, *b) - c)/eps;
    *w1 -= d*rate;

    d = (mse(*w1, *w2+eps, *b) - c)/eps;
    *w2 -= d*rate;

    d = (mse(*w1, *w2, *b+eps) - c)/eps;
    *b -= d*rate;

  }
#+end_src

** The main function
Lastly the function that pieces everything together
#+begin_src c
  int main(void)
  {
    float w1 = 0.0;
    float w2 = 0.0;
    float b  = 0.0;

    printf("Mse: %f; w1: %f; w2: %f, b: %f\n", mse(w1, w2, b), w1, w2, b);

    for (int i = 0; i < 10; i++)
    {
      fdiff(&w1, &w2, &b);
      printf("Mse: %f; w1: %f; w2: %f, b: %f\n", mse(w1, w2, b), w1, w2, b);
    }

    for (int i = 0; i < 2; i++)
    {
      for (int j = 0; j < 2; j++)
      {
        printf("%d & %d | %f\n", i, j, forward(i, j, w1, w2, b));
      }
    }
  }
#+end_src
